{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "LambdaUnderscorehandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/kushisaba-prd-lambda_handler"
      }
    },
    "LambdaUnderscorehandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/kushisaba/prd/1506313464135-2017-09-25T04:24:24.135Z/kushisaba.zip"
        },
        "FunctionName": "kushisaba-prd-lambda_handler",
        "Handler": "mk_handler.lambda_handler",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::962533155566:role/lambda_basic_execution",
        "Runtime": "python3.6",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "BUCKET_NAME": "mackerel-webhooks",
            "ACCOUNT_SID": "AC24ecb3ac6982066e37779d0d3df4e7b9",
            "AUTH_TOKEN": "e2873107310a8c4f69299f45c628cf62",
            "FROM": "+815031878685",
            "URL": "http://twimlets.com/holdmusic?Bucket=com.twilio.music.ambient"
          }
        }
      },
      "DependsOn": [
        "LambdaUnderscorehandlerLogGroup"
      ]
    },
    "LambdaUnderscorehandlerLambdaVersionpTrR5bVaKNaeOqOr4nk0VZAew7IWg3li927EuTg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaUnderscorehandlerLambdaFunction"
        },
        "CodeSha256": "pTrR5bVaKNa+eOqO/r4nk0/V/ZAew7IWg3li927EuTg="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "prd-kushisaba"
      }
    },
    "ApiGatewayResourceMackerel": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "mackerel",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodMackerelOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceMackerel"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodMackerelPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceMackerel"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LambdaUnderscorehandlerLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1506313464527": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "prd"
      },
      "DependsOn": [
        "ApiGatewayMethodMackerelPost"
      ]
    },
    "LambdaUnderscorehandlerLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaUnderscorehandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "LambdaUnderscorehandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LambdaUnderscorehandlerLambdaVersionpTrR5bVaKNaeOqOr4nk0VZAew7IWg3li927EuTg"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.ap-northeast-1.amazonaws.com/prd"
          ]
        ]
      }
    }
  }
}